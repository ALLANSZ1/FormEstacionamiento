version: '3.8'

services:
  client:
    build:
      context: ./Client
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    depends_on:
      - server
    networks:
      - app-network
    volumes:
      - ./Client/src:/app/src
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3

  server:
    build:
      context: ./Server
      dockerfile: Dockerfile
    ports:
      - "3001:3000"
    env_file: .env
    environment:
      - NODE_ENV=development
      - DB_URL=${DB_URL}
      - PORT=3000
    restart: unless-stopped
    networks:
      - app-network
    volumes:
      - ./Server/src:/app/src
      - /app/node_modules
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    depends_on:
      - client
      - server
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
